version: '2.2'

services:

  spark-master:
    image: bde2020/spark-master:2.4.0-hadoop2.8-scala2.12
    container_name: spark-master
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      - INIT_DAEMON_STEP=setup_spark
      - "constraint:node==<yourmasternode>"
  spark-worker-1:
    image: bde2020/spark-worker:2.4.0-hadoop2.8-scala2.12
    container_name: spark-worker-1
    depends_on:
      - spark-master
    ports:
      - "8081:8081"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"
      - "constraint:node==<yourworkernode>"


  # zookeeper:
  #   image: wurstmeister/zookeeper
    
  # kafka:
  #   image: wurstmeister/kafka
  #   ports:
  #   - "9092:9092"
  #   environment:
  #     KAFKA_ADVERTISED_HOST_NAME: localhost
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

  # cassandra:
  #     image: cassandra:3.11.2
  #     container_name: cassandra
  #     ports:
  #       - "9042:9042"
  #     environment:
  #       - "MAX_HEAP_SIZE=256M"
  #       - "HEAP_NEWSIZE=128M"
  #     restart: always
  #     volumes:
  #       - ./out/cassandra_data:/var/lib/cassandra
  #     healthcheck:
  #       test: ["CMD", "cqlsh", "-u cassandra", "-p cassandra" ,"-e describe keyspaces"]
  #       interval: 15s
  #       timeout: 10s
  #       retries: 10

  # cassandra-load-keyspace:
  #     container_name: cassandra-load-keyspace
  #     image: cassandra:3.11.2
  #     depends_on:
  #       cassandra:
  #         condition: service_healthy
  #     volumes:
  #       - ./FraudDetection/src/main/resources/cassandra/creditcard.cql:/schema.cql
  #     command: /bin/bash -c "echo loading cassandra keyspace && cqlsh cassandra -f /schema.cql"

  # postgres:
  #   image: postgres:9.6
  #   environment:
  #       - POSTGRES_USER=airflow
  #       - POSTGRES_PASSWORD=airflow
  #       - POSTGRES_DB=airflow

  # airflow:
  #     image: puckel/docker-airflow:1.10.9
  #     restart: always
  #     mem_limit: 8000m
  #     depends_on:
  #         - postgres
  #     env_file:
  #         - .env
  #     environment:
  #         - LOAD_EX=n
  #         - EXECUTOR=Local
  #     volumes:
  #         - ./dags:/usr/local/airflow/dags
  #         - ./test:/usr/local/airflow/test
  #         - ./plugins:/usr/local/airflow/plugins
  #         # Uncomment to include custom plugins
  #         - ./requirements.txt:/requirements.txt
  #         # - ~/.aws:/usr/local/airflow/.aws
  #     ports:
  #         - "9090:8080"
  #     command: webserver
  #     healthcheck:
  #         test: ["CMD-SHELL", "[ -f /usr/local/airflow/airflow-webserver.pid ]"]
  #         interval: 30s
  #         timeout: 30s
  #         retries: 3